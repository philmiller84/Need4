@page "/TradeViewDetails/{tradeId:int}"

<h3>TradeViewDetails</h3>

<TradeViewSmall trade="@trade"></TradeViewSmall>
<div class="container">
    <div class="col-md-6">
        @foreach (ActionDetails a in actions)
        {
            <button type="button" class="btn btn-primary" @onclick="@(_ => NavigationManager.NavigateTo(String.Format(a.Method, tradeId)))">@a.Name</button>
        }
    </div>
</div>

@code {
    [Parameter]
    public int tradeId { get; set; }

    bool show = true;
    string style_display { get { return show ? "display:show" : "display:none"; } }

    List<ActionDetails> actions;
    TradeService.TradeServiceClient tradeClient;
    Trade trade;

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        tradeClient = Need4Service.GetTradeClient();
        await base.SetParametersAsync(parameters);
    }

    protected override void OnParametersSet()
    {
        var grpcInt = new Google.Protobuf.WellKnownTypes.Int32Value { Value = Convert.ToInt32(tradeId) };
        trade = tradeClient.GetDetailedTradeView(grpcInt);
        var response = tradeClient.GetTradeActions(new TradeActionRequest { TradeId = tradeId, UserId = -1 });
        actions = response.Actions.ToList();

    }

    protected override void OnInitialized()
    {
        // THIS DOES NOT GET CALLED WHEN A PARAMETER CHANGES!!!
        // Note: when using NavigationManager, and changing the param, this gets SKIPPED!
    }
}

