syntax = "proto3";
package Need4Protocol;
import "google/protobuf/empty.proto";
import "protos/Action.proto";
import "protos/Activity.proto";
import "protos/Community.proto";
import "protos/Item.proto";
import "protos/Member.proto";
import "protos/Permission.proto";
import "protos/Sale.proto";
import "protos/Trade.proto";
import "protos/User.proto";
import "protos/Vote.proto";

service CommunityService {
	rpc GetAllCommunities (google.protobuf.Empty) returns (CommunityList);
	rpc GetCommunityMembers (Community) returns (MemberList);
	rpc GetOpenDecisions (Community) returns (DecisionList);
	rpc DoReportMember(Member) returns (ActionResponse);
}

service ActivityService {
	rpc GetAllActivities (User) returns (ActivityResponse);
}

service TradeService {
	rpc CreateTrade (Trade) returns (ActionResponse);
	rpc GetOpenTrades (google.protobuf.Empty) returns (TradeList);
	rpc GetTradeActions (TradeUserInfo) returns (ActionList);
	rpc DoTradeAction(TradeActionRequest) returns (TradeActionResponse);
	rpc GetPermissions (TradeUserInfo) returns (PermissionSet);
	rpc AddPermission (PermissionRequest) returns (PermissionSet);
	rpc GetTradeUserState (TradeUserInfo) returns (State);
	rpc AddTradeUserState (TradeUserInfo) returns (State);
	rpc CheckPermissions (TradeUserInfo) returns (PermissionSet);
	rpc GetUserTrades (User) returns (TradeList);
}

service PermissionService {
	rpc IsUserPermissioned (UserPermission) returns (ActionResponse);
	rpc GetAllPermissions(User) returns (PermissionSet);
}

service ItemRepository {
	rpc AddNewItem (Item) returns (ActionResponse);
	rpc GetAllItems (google.protobuf.Empty) returns (ItemList);
	rpc GetMatchingItems (Item) returns (ItemList);
}

service SaleService {
	rpc CreateSale (Sale) returns (ActionResponse);
	rpc GetSales (google.protobuf.Empty) returns (SaleList);
}

service UserService {
	rpc GetUser (User) returns (User);
	rpc CreateUser (User) returns (User);
}